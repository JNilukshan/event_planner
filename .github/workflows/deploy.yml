name: Deploy Event Planner to VM

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build Event Planner
        run: npm run build

      - name: Copy dist folder to VM
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          password: ${{ secrets.VM_PASSWORD }}
          source: "dist/*"
          target: "/home/azureuser/event_planner/"
          strip_components: 1

      - name: Set ownership and permissions
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          password: ${{ secrets.VM_PASSWORD }}
          script: |
            sudo chown -R www-data:www-data /home/azureuser/event_planner
            sudo chmod -R 755 /home/azureuser/event_planner
            sudo chmod +x /home/azureuser

      - name: Configure Nginx and restart
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          password: ${{ secrets.VM_PASSWORD }}
          script: |
            sudo tee /etc/nginx/sites-available/event-planner > /dev/null << 'EOF'
            server {
                listen 3000;
                server_name _;

                root /home/azureuser/event_planner;
                index index.html;

                location / {
                    try_files $uri /index.html;
                }

                location /assets/ {
                    root /home/azureuser/event_planner;
                    access_log off;
                    log_not_found off;
                }

                location /health {
                    return 200 "Event Planner OK";
                    add_header Content-Type text/plain;
                }

                error_log /var/log/nginx/event-planner-error.log;
                access_log /var/log/nginx/event-planner-access.log;
            }
            EOF

            sudo ln -sf /etc/nginx/sites-available/event-planner /etc/nginx/sites-enabled/
            sudo nginx -t
            sudo systemctl reload nginx

            echo "âœ… Event Planner deployed on http://$(curl -s ifconfig.me):3000/"
