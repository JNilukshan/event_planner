name: Deploy React App to VM

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build React app
      run: npm run build

    - name: Copy build folder to VM
      uses: appleboy/scp-action@v0.1.5
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        password: ${{ secrets.VM_PASSWORD }}
        source: "dist/*"
        target: "/home/azureuser/event_planner/"
        strip_components: 1

    - name: Configure Nginx and restart
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        password: ${{ secrets.VM_PASSWORD }}
        script: |
          # Ensure proper ownership
          sudo chown -R www-data:www-data /home/azureuser/event_planner
          sudo chmod -R 755 /home/azureuser/event_planner

          # Create Nginx config
          sudo tee /etc/nginx/sites-available/event-planner > /dev/null << 'EOF'
          server {
              listen 3000;
              server_name _;

              root /home/azureuser/event_planner;
              index index.html;

              location / {
                  try_files $uri /index.html;
              }

              location /health {
                  return 200 "Event Planner OK";
                  add_header Content-Type text/plain;
              }

              error_log /var/log/nginx/event-planner-error.log;
              access_log /var/log/nginx/event-planner-access.log;
          }
          EOF

          # Enable site and restart nginx
          sudo ln -sf /etc/nginx/sites-available/event-planner /etc/nginx/sites-enabled/
          sudo nginx -t
          sudo systemctl restart nginx

          # Confirm deployment
          echo "âœ… Deployment complete! Check http://$(curl -s ifconfig.me)/"
