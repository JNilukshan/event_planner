name: Deploy to VM

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

    - name: Prepare VM
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        password: ${{ secrets.VM_PASSWORD }}
        script: |
          # Stop nginx to avoid conflicts during deployment
          sudo systemctl stop nginx 2>/dev/null || true
          
          # Remove old files and create directory
          sudo rm -rf /home/azureuser/event_planner/*
          mkdir -p /home/azureuser/event_planner
          
          # Install nginx if not exists
          if ! command -v nginx &> /dev/null; then
            sudo apt update
            sudo apt install -y nginx
          fi

    - name: Copy build files to VM
      uses: appleboy/scp-action@v0.1.5
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        password: ${{ secrets.VM_PASSWORD }}
        source: "dist/*"
        target: "/home/azureuser/event_planner/"
        strip_components: 1

    - name: Configure and start application
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        password: ${{ secrets.VM_PASSWORD }}
        script: |
          echo "📁 Files copied:"
          ls -la /home/azureuser/event_planner/
          
          # Fix permissions for nginx
          sudo chown -R www-data:www-data /home/azureuser/event_planner
          sudo chmod -R 755 /home/azureuser/event_planner
          sudo chmod 644 /home/azureuser/event_planner/* 2>/dev/null || true
          
          # Create simple nginx configuration
          sudo tee /etc/nginx/sites-available/event-planner > /dev/null << 'EOF'
          server {
              listen 3000;
              server_name _;
              
              root /home/azureuser/event_planner;
              index index.html;
              
              location / {
                  try_files $uri $uri/ /index.html;
              }
              
              location /health {
                  return 200 "Event Planner OK";
                  add_header Content-Type text/plain;
              }
              
              error_log /var/log/nginx/event-planner-error.log;
              access_log /var/log/nginx/event-planner-access.log;
          }
          EOF
          
          # Enable site
          sudo rm -f /etc/nginx/sites-enabled/event-planner*
          sudo ln -sf /etc/nginx/sites-available/event-planner /etc/nginx/sites-enabled/
          
          # Test and start nginx
          echo "🧪 Testing nginx configuration..."
          sudo nginx -t
          
          if [ $? -eq 0 ]; then
              echo "✅ Starting nginx..."
              sudo systemctl start nginx
              sudo systemctl enable nginx
              
              # Test the deployment
              sleep 3
              echo "🔍 Testing deployment..."
              curl -I http://localhost:3000 || echo "Local test failed"
              
              echo ""
              echo "✅ Event Planner deployed successfully!"
              echo "🌐 Access at: http://$(curl -s ifconfig.me):3000"
              echo ""
              echo "� Files deployed:"
              ls -la /home/azureuser/event_planner/
              
          else
              echo "❌ Nginx configuration error:"
              sudo nginx -t
              echo "Error logs:"
              sudo tail -10 /var/log/nginx/error.log
              exit 1
          fi